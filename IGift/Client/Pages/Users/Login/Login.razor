@page "/Login"
@inject NavigationManager NavigationManager


<div class="d-flex justify-center">
    <MudImage Src="svg/MainLogo.jpg" ObjectFit="ObjectFit.Fill" ObjectPosition="ObjectPosition.Center" Height="170" Width="830" Elevation="25" Class="rounded-lg" />
</div>

<br />
<br />

<MudGrid Justify=Justify.Center>
    <MudItem xs="8" sm="5">

        <MudPaper Class="pa-4" Elevation="0" Style="background-color:#C3D0E3">

            <h5 class="card-title">Ingresá tu Email,</h5>
            <h5 class="card-title">Teléfono o usuario de</h5>
            <h5 class="card-title">IGift</h5>

            <MudPaper Width="300px" Square="true" Elevation="0" Style="background-color:transparent">
                <MudList T="string">

                    <p>Reportar un problema</p>

                    <MudNavLink Icon="@Icons.Material.Filled.PhoneAndroid">
                        Robo o pérdida de teléfono
                    </MudNavLink>

                    <MudDivider DividerType="DividerType.Inset" />

                    <MudNavLink Icon="@Icons.Material.Filled.Person">
                        Robo de cuenta
                    </MudNavLink>

                    <MudDivider DividerType="DividerType.Inset" />

                    <MudNavLink>
                        <MudLink Href="#" Typo="Typo.body2">Necesito ayuda con otros temas</MudLink>
                    </MudNavLink>

                </MudList>
            </MudPaper>

        </MudPaper>

    </MudItem>

    <MudItem xs="8" sm="5">

        <MudPaper Class="pa-4 mud-height-full" Style="background-color:#C3D0E3">

            <EditForm Model="loginModel" OnValidSubmit="HandleLoginForm">
                <DataAnnotationsValidator />
                @* 
                    <ValidationSummary /> 
                    Esto es un lugar donde aparecen los mensajes de validation. Podemos usar este o simplemente usar ValidatioNMessage For debajo o arriba de cada input correspondiente
                *@

                <div class="form-group">
                    <MudTextField Style=@EstiloInputs @bind-Value="loginModel.Email" Label="Usuario" Variant="Variant.Text" Clearable="true" Adornment="Adornment.End"  AdornmentIcon="@Icons.Material.Filled.CardGiftcard" AdornmentColor="Color.Warning" Immediate="true" FullWidth="false" />
                </div>
                <div class="form-group">
                    <MudTextField Style=@EstiloInputs T="string" Label="Password" @bind-Value="loginModel.Password" InputType="InputType.Password" Required="true" RequiredError="Password is required!" />
                    <br />
                </div>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary">Login</MudButton>
            </EditForm>

        </MudPaper>

    </MudItem>
</MudGrid>
<br />
<CaruselInicio />




@code {
    bool success;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }

    private string PasswordMatch(string arg)
    {
        if (pwField1.Value != arg)
            return "Passwords don't match";
        return null;
    }
    private string EstiloInputs = "width:250px;";
}
