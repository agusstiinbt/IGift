<MudPaper Class="width:100px;height:35px;" Style="background-color:#181A20;" Elevation="0">
    <button @onclick="@ToggleOpen" style="color:#828C9A">@userName</button>
    <MudPopover Open="_open" OverflowBehavior="OverflowBehavior.FlipAlways" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Paper="false">
        <MudPaper Outlined="true" Class="px-4 py-8">
            <MudPaper Width="250px" Class="py-3" Elevation="0">
                <MudNavMenu>

                    <MudText Typo="Typo.h6" Class="px-4">@userName</MudText>

                    <MudText Typo="Typo.body2">
                        <MudNavLink Href="/UserProfile">Mi perfil</MudNavLink>
                    </MudText>

                    <MudDivider Class="my-2" Style="border:20px; " />

                    <MudNavLink Href="/dashboard">Compras</MudNavLink>
                    <MudNavLink Href="/servers">Preguntas</MudNavLink>
                    <MudNavLink Href="/billing" Disabled="true">Opiniones</MudNavLink>

                    <MudDivider Class="my-2" Style="border:20px; " />

                    <MudNavGroup Title="Settings" Expanded="true">
                        <MudNavLink Href="/security">Security</MudNavLink>
                        <MudNavLink Href="/security">Configuraciones de inicio</MudNavLink>
                    </MudNavGroup>

                    <MudNavLink OnClick="Logout">Salir</MudNavLink>

                </MudNavMenu>
            </MudPaper>
        </MudPaper>
    </MudPopover>
</MudPaper>




@code {

    [CascadingParameter] private HubConnection? hubConnection { get; set; }

    [Parameter] public string userName { get; set; }

    private string MenuStyle = "visibility:collapse";
    private string _buttonText = "Reply";

    public bool _open;
    public bool _expanded;

    private void SetButtonText(int id)
    {
        switch (id)
        {
            case 0:
                _buttonText = "Reply";
                break;
            case 1:
                _buttonText = "Reply All";
                break;
            case 2:
                _buttonText = "Forward";
                break;
            case 3:
                _buttonText = "Reply & Delete";
                break;
        }
    }

    private void Logout()
    {
        var parameters = new DialogParameters
        {
            {nameof(Pages.Users.Logout.HubConnection), hubConnection}
        };

        var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true };

        _dialogService.Show<Pages.Users.Logout>("Salir", parameters, options);
    }

    public void ToggleOpen()
    {
        if (_open)
            _open = false;
        else
            _open = true;
    }

    private void ShowMenu()
    {
        if (!string.IsNullOrEmpty(MenuStyle))
            MenuStyle = string.Empty;
        else
            MenuStyle = "visibility:collapse";
    }

}