<div>
    <MudBadge Color="Color.Error" Visible=@_visible Content=@_notifications Overlap="true" Bordered="true" Class="mx-6 my-4">
        <MudIcon @onclick="ToggleOpen" Icon="@Icons.Material.Filled.Notifications" Color="Color.Warning" />
    </MudBadge>
     <MudPopover Open="_open" OverflowBehavior="OverflowBehavior.FlipAlways" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Paper="false">
        <MudPaper Outlined="true" Class="px-4 py-8">
            <MudPaper Width="250px" Class="py-3" Elevation="0">

                <MudNavMenu>

                 @*    @foreach (var item in collection)
                    {
                        
                    } *@
                    <MudMenuItem OnClick="() => SetButtonText(0)">Reply</MudMenuItem>
                    <MudMenuItem OnClick="() => SetButtonText(1)">Reply All</MudMenuItem>
                    <MudMenuItem OnClick="() => SetButtonText(2)">Forward</MudMenuItem>
                    <MudMenuItem OnClick="() => SetButtonText(3)">Reply & Delete</MudMenuItem>

                    <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Mi perfil></MudText>

                    <MudDivider Class="my-2" Style="border:20px; " />

                    <MudNavLink Href="/dashboard">Compras</MudNavLink>
                    <MudNavLink Href="/servers">Preguntas</MudNavLink>
                    <MudNavLink Href="/billing" Disabled="true">Opiniones</MudNavLink>

                    <MudDivider Class="my-2" Style="border:20px; " />

                    <MudNavGroup Title="Settings" Expanded="true">
                        <MudNavLink Href="/security">Security</MudNavLink>
                        <MudNavLink Href="/security">Configuraciones de inicio</MudNavLink>
                    </MudNavGroup>

                    <MudNavLink Href=@AppConstants.Routes.Logout>Salir</MudNavLink>

                </MudNavMenu>
            </MudPaper>
        </MudPaper>
    </MudPopover>
</div>

@code {
    //private List<NotificationResponse> Notificaciones = new();

    private string _buttonText = "Reply";

    private void SetButtonText(int id)
    {
        switch (id)
        {
            case 0:
                _buttonText = "Reply";
                break;
            case 1:
                _buttonText = "Reply All";
                break;
            case 2:
                _buttonText = "Forward";
                break;
            case 3:
                _buttonText = "Reply & Delete";
                break;
        }
    }


    private int _notifications { get; set; }
    private bool _visible { get; set; }

    protected override Task OnInitializedAsync()
    {
        _notifications = 1;
        _visible = _notifications == 0 ? false : true;

        return base.OnInitializedAsync();
    }
    public bool _open;

    public void ToggleOpen()
    {
        if (_open)
            _open = false;
        else
            _open = true;
    }

}